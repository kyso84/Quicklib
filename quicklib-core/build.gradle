apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'maven'

// Project setup
println 'commonCompileSdkVersion=' + commonCompileSdkVersion;
println 'commonBuildToolsVersion=' + commonBuildToolsVersion;
println 'commonMinSdkVersion=' + commonMinSdkVersion;
println 'commonTargetSdkVersion=' + commonTargetSdkVersion;
println 'projectVersionCode=' + projectVersionCode;
println 'projectVersionName=' + projectVersionName;

android {
    compileSdkVersion commonCompileSdkVersion.toInteger()
    buildToolsVersion commonBuildToolsVersion

    defaultConfig {
        minSdkVersion commonMinSdkVersion.toInteger()
        targetSdkVersion commonTargetSdkVersion.toInteger()
        versionCode projectVersionCode.toInteger()
        versionName projectVersionName
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        warning 'InvalidPackage'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation('com.android.support:support-compat:' + supportVersion)
    implementation('com.android.support:support-core-utils:' + supportVersion)
    implementation('com.android.support:support-annotations:' + supportVersion)
    implementation('com.android.support:appcompat-v7:' + supportVersion)

    implementation('com.squareup.picasso:picasso:' + picassoVersion)

    testImplementation ('junit:junit:' + junitVersion)
    testImplementation ('org.assertj:assertj-core:' + assertJVersion)
    testImplementation ('org.mockito:mockito-all:' + mockitoVersion)
    testImplementation ('org.powermock:powermock:' + powerMockVersion)
    testImplementation ('org.powermock:powermock-module-junit4:' + powerMockVersion)
    testImplementation ('org.powermock:powermock-api-mockito2:'  + powerMockVersion)
}
apply from: '../publish.gradle'
